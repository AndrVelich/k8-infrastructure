kube-prometheus-stack:

  kube-state-metrics:
    prometheus:
      monitor:
        enabled: true
        additionalLabels:
          release: kube-prometheus-stack

  prometheus-node-exporter:
    hostRootFsMount:
      enabled: false

  #storageSpec:
    ## Using PersistentVolumeClaim
    ##
    #  volumeClaimTemplate:
    #    spec:
    #      storageClassName: gluster
    #      accessModes: ["ReadWriteOnce"]
    #      resources:
    #        requests:
    #          storage: 50Gi
    #    selector: {}

    ## Using tmpfs volume
    ##
    #  emptyDir:
    #    medium: Memory

  ## Configuration for alertmanager
  ## ref: https://prometheus.io/docs/alerting/alertmanager/
  ##
  alertmanager:
    ingress:
      enabled: true

      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: traefik-sso@kubernetescrd

      labels: {}

      ## Redirect ingress to an additional defined port on the service
      # servicePort: 8081

      ## Hosts must be provided if Ingress is enabled.
      ##
      hosts:
        - alertmanager.local.k8s-infrastructure.com

    config:
      global:
        resolve_timeout: 5m
      inhibit_rules:
      - source_matchers:
          - 'severity = critical'
        target_matchers:
          - 'severity =~ warning|info'
        equal:
          - 'namespace'
          - 'alertname'
      - source_matchers:
          - 'severity = warning'
        target_matchers:
          - 'severity = info'
        equal:
          - 'namespace'
          - 'alertname'
      - source_matchers:
          - 'alertname = InfoInhibitor'
        target_matchers:
          - 'severity = info'
        equal:
          - 'namespace'
      templates:
      - '/etc/alertmanager/config/*.tmpl'

    alertmanagerSpec:
      alertmanagerConfiguration:
        name: alertmanager-config
    

  ## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
  ##
  grafana:
    enabled: true

    ## Timezone for the default dashboards
    ## Other options are: browser or a specific timezone, i.e. Europe/Luxembourg
    ##
    defaultDashboardsTimezone: browser

    adminPassword: prom-operator

    ingress:
      enabled: true

      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: traefik-sso@kubernetescrd

      hosts:
        - grafana.local.k8s-infrastructure.com

  ## Deploy a Prometheus instance
  ##
  prometheus:
    enabled: true

    prometheusSpec:
    secrets:
      - etcd-client
    
    ingress:
      enabled: true

      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: traefik-sso@kubernetescrd

      hosts:
        - prometheus.local.k8s-infrastructure.com


##
kubeEtcd:
  serviceMonitor:
    scheme: https
    insecureSkipVerify: false
    serverName: localhost
    caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca
    certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client
    keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key